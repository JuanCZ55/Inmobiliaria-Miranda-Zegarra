@model IEnumerable<Inmobiliaria.Models.Inmueble>
@{
  ViewData["Title"] = "Listado de Inmuebles";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Listado de Inmuebles</h2>
<div class="container px-0 p-3 row">
  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <input type="text" id="direccion" class="zeg-input" placeholder=" " oninput="filtrarInmuebles()" />
      <label for="direccion">Ingrese Dirección</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <input type="text" id="dni" class="zeg-input" placeholder=" " oninput="filtrarInmuebles()" />
      <label for="dni">Ingrese DNI propietario</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <select id="tipo" class="zeg-input" onchange="filtrarInmuebles()">
        <option value=""></option>
        @foreach (var tipo in ViewBag.Tipos ?? new List<Inmobiliaria.Models.TipoInmueble>())
        {
          <option value="@tipo.IdTipoInmueble">@tipo.Nombre</option>
        }
      </select>
      <label for="tipo">Tipo de inmueble</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <select id="uso" class="zeg-input" onchange="filtrarInmuebles()">
        <option value=""></option>
        <option value="1">Residencial</option>
        <option value="2">Comercial</option>
      </select>
      <label for="uso">Uso</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <input type="number" id="ambientes" class="zeg-input" placeholder=" " oninput="filtrarInmuebles()" />
      <label for="ambientes">Min Cantidad de ambientes</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <input type="number" id="precioMin" class="zeg-input" placeholder=" " oninput="filtrarInmuebles()" />
      <label for="precioMin">Precio mínimo</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <input type="number" id="precioMax" class="zeg-input" placeholder=" " oninput="filtrarInmuebles()" />
      <label for="precioMax">Precio máximo</label>
    </div>
  </div>

  <div class="col-md-3 mb-1">
    <div class="zeg-field">
      <select id="estado" class="zeg-input" onchange="filtrarInmuebles()">
        <option value=""></option>
        <option value="1">Disponible</option>
        <option value="2">Ocupado</option>
        <option value="3">Suspendido</option>
      </select>
      <label for="estado">Estado</label>
    </div>
  </div>
</div>


<table class="table table-hover table-caption-top">
  <thead class="table-dark">
    <tr>
      <th>@Html.DisplayNameFor(model => model.First().IdInmueble)</th>
      <th>@Html.DisplayNameFor(model => model.First().Direccion)</th>
      <th>@Html.DisplayNameFor(model => model.First().IdPropietario)</th>
      <th>Tipo de Inmueble</th>
      <th>@Html.DisplayNameFor(model => model.First().Uso)</th>
      <th>@Html.DisplayNameFor(model => model.First().CantidadAmbientes)</th>
      <th>@Html.DisplayNameFor(model => model.First().Descripcion)</th>
      <th>@Html.DisplayNameFor(model => model.First().Precio)</th>
      <th>@Html.DisplayNameFor(model => model.First().Estado)</th>
      <th>Acciones</th>
    </tr>
  </thead>
  <tbody id="tablaInmueble">
    @foreach (var i in Model)
    {
      <tr>
        <td>@i.IdInmueble</td>
        <td>@i.Direccion</td>
        <td>@i.IdPropietario</td>
        <td>@(ViewBag.TipoDict.ContainsKey(i.IdTipoInmueble) ? ViewBag.TipoDict[i.IdTipoInmueble] : "-")</td>
        @if (i.Uso == 1)
        {
          <td>Residencial</td>
        }
        else
        {
          <td>Comercial</td>
        }

      <td>@i.CantidadAmbientes</td>
      <td>@i.Descripcion</td>
      <td>@i.Precio</td>
      <td>
        @(i.Estado == 1 ? "Disponible" :
                i.Estado == 2 ? "Ocupado" :
                i.Estado == 3 ? "Suspendido" :
                "Error")
        </td>
        <td class="d-flex ">
          <a asp-controller="Contrato" asp-action="Crear" asp-route-idInmueble="@i.IdInmueble"
            class="btn btn-primary btn-sm">Crear contrato</a>
          <a asp-action="Modificar" asp-route-id="@i.IdInmueble" class="btn btn-warning btn-sm">Modificar</a>
          <form asp-action="Eliminar" asp-route-id="@i.IdInmueble" method="post" style="display:inline;">
            <button type="submit" class="btn btn-danger btn-sm">Eliminar</button>
          </form>
        </td>
      </tr>
    }
  </tbody>
</table>


<script>
  function filtrarInmuebles() {
    const direccion = document.getElementById("direccion").value;
    const dni = document.getElementById("dni").value;
    const tipo = document.getElementById("tipo").value;
    const uso = document.getElementById("uso").value;
    const ambientes = document.getElementById("ambientes").value;
    const precioMin = document.getElementById("precioMin").value;
    const precioMax = document.getElementById("precioMax").value;
    const estado = document.getElementById("estado").value;

    const params = new URLSearchParams();
    if (direccion) params.append("direccion", direccion);
    if (dni) params.append("dni", dni);
    if (tipo) params.append("tipo", tipo);
    if (uso) params.append("uso", uso);
    if (ambientes) params.append("ambientes", ambientes);
    if (precioMin) params.append("precioMin", precioMin);
    if (precioMax) params.append("precioMax", precioMax);
    if (estado) params.append("estado", estado);

    let url = "/Inmueble/SupaFiltro?" + params.toString();
    // Si no hay ningún filtro, usar ListarTodos
    if (!direccion && !dni && !tipo && !uso && !ambientes && !precioMin && !precioMax && !estado) {
      url = "/Inmueble/ListarTodos";
    }
    fetch(url)
      .then(response => response.json())
      .then(data => {
        let tbody = document.getElementById("tablaInmueble");
        tbody.innerHTML = "";
        if (data.length === 0) {
          tbody.innerHTML = `<tr><td colspan="10" class="text-center">No se encontraron inmuebles</td></tr>`;
          return;
        }
        data.forEach(i => {
          tbody.innerHTML += `
            <tr>
                <td>${i.idInmueble}</td>
                <td>${i.direccion}</td>
                <td>${i.idPropietario}</td>
                <td>${i.idTipoInmueble}</td>
                <td>${i.uso == 1 ? 'Residencial' : 'Comercial'}</td>
                <td>${i.cantidadAmbientes}</td>
                <td>${i.descripcion}</td>
                <td>${i.precio}</td>
                <td>${i.estado == 1 ? 'Disponible' : i.estado == 2 ? 'Ocupado' : i.estado == 3 ? 'Suspendido' : 'Error'}</td>
                <td class="d-flex justify-content-evenly">
                    <a href="/Contrato/Crear?idInmueble=${i.idInmueble}" class="btn btn-primary btn-sm">Crear contrato</a>
                    <a href="/Inmueble/Modificar/${i.idInmueble}" class="btn btn-warning btn-sm">Modificar</a>
                    <form action="/Inmueble/Eliminar/${i.idInmueble}" method="post" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm">Eliminar</button>
                    </form>
                </td>
            </tr>`;
        });
      })
      .catch(err => { console.error(err); alert("Hubo un problema al filtrar"); });
  }

  // Llamar al cargar la página para mostrar todos
  window.onload = filtrarInmuebles;
</script>

@if (TempData["Mensaje"] != null)
{
  <div id="mensajeAlerta" class="alert alert-success">
    @TempData["Mensaje"]
  </div>
  <script>
    setTimeout(function () {
      var alerta = document.getElementById("mensajeAlerta");
      if (alerta) { alerta.style.transition = "opacity 0.5s ease"; alerta.style.opacity = "0"; setTimeout(() => alerta.remove(), 500); }
    }, 5000);
  </script>
}
<script>
  document.addEventListener("DOMContentLoaded", () => {

    document.querySelectorAll('select.zeg-input').forEach(select => {
      if (select.value !== "") select.classList.add('active');

      select.addEventListener('change', () => {
        if (select.value !== "") select.classList.add('active');
        else select.classList.remove('active');
      });
    });

    document.querySelectorAll('input.zeg-input, textarea.zeg-input').forEach(input => {
      if (input.value !== "") input.classList.add('active');
      input.addEventListener('input', () => {
        if (input.value !== "") input.classList.add('active');
        else input.classList.remove('active');
      });
    });

  });

</script>